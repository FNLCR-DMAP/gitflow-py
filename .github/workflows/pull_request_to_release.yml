name: Open Pull Request to Release
run-name: Pull Request "${{ github.head_ref }}" to Release by ${{ github.actor }} 

on:
  workflow_call:
    inputs:      
      image_to_use:
        required: true
        type: string
      
jobs:
  Pull_request_checks:
    runs-on: ubuntu-latest
    container: 
      image: ${{ inputs.image_to_use }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
         
    steps:
      - name: Show Computing Environment
        id: Show_Computing_Environment
        run: |
          # Activating bash and conda
          bash
          # echo "Checking in ${{ inputs.image_to_use }}"
          # . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          # conda activate spac
          # conda list

      - run: echo "Checking in ${{ inputs.image_to_use }}"
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Checking Version 
        run: |
          bash
          # . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          # conda activate spac

          # Install semantic-release
          # conda install -c conda-forge python-semantic-release

          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          cd $current_wd
          
          export MY_GIT_TOKEN=${{ secrets.GITHUB_TOKEN }}
          export MY_GIT_USERNAME=${{ github.actor }}
          export MY_GIT_EMAIL=${{ github.event.pusher.email }}
          
          # Config git credentials
          git config --global user.name \
              "$MY_GIT_USERNAME"
          git config --global user.email \
              "$MY_GIT_EMAIL"
          git config --global url."https://api:$MY_GIT_TOKEN@github.com/".insteadOf "https://github.com/"
          git config --global url."https://ssh:$MY_GIT_TOKEN@github.com/".insteadOf "ssh://git@github.com/"
          git config --global url."https://git:$MY_GIT_TOKEN@github.com/".insteadOf "git@github.com:"
          
          git config --global --add safe.directory "$current_wd"

          # Clone the github repo for further processing
          git clone https://github.com/${GITHUB_REPOSITORY}.git
          
          cd ${GITHUB_REPOSITORY#*/}

          # Checkout current branch
          git checkout ${{ github.head_ref }}
          
          # Add semantic release setting to pyproject.toml
          # If the current file does not have the setting
          line="[tool.semantic_release]"
          version_variable="version_variable = \"pyproject.toml:version\""

          if grep -Fxq "$line" pyproject.toml && \
            grep -Fxq "$version_variable" pyproject.toml; then

              echo "Semantic release setting already exists in pyproject.toml"

          else
              echo "" >> pyproject.toml
              echo "$line" >> pyproject.toml
              echo "$version_variable" >> pyproject.toml
              echo "Added semantic release setting to pyproject.toml"
              echo "" >> pyproject.toml
          fi

          # Only print the version, not bumping the version yet.         
          echo $(semantic-release print-version)

          echo "version_log=$(semantic-release print-version)" >> $GITHUB_ENV
      
      - name: Display Version Log
        run: |
          echo "Version after merging:"
          echo "${{ env.version_log }}"
          

      - name: Lint All Python Scripts
        id: lint_all
        run: |
          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          echo "$current_wd"

          # Install flake8
          python -m pip install flake8

          echo "flake8 version:"
          flake8 --version

          echo "Setup git:"
          git config --global --add safe.directory $current_wd
          
          git clone https://github.com/fnlcr-dmap/gitflow-py.git

          cd gitflow-py
          
          git checkout omero

          cd $current_wd

          bash $current_wd/gitflow-py/src/lint_all_scripts.sh
      
      - id: Run_All_Unit_Tests
        name: Run All Unit Tests
        run: |
          bash
          # . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          # conda activate spac

          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          echo "$current_wd"
          
          bash $current_wd/gitflow-py/src/run_all_unit_tests.sh "$current_wd"
