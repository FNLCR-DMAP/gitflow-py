name: Adding documentation and update GitHub Page
run-name: Post merged to main by ${{ github.actor }} 

on:
  workflow_call:
    inputs:
    
      image_to_use:
        required: true
        type: string
    secrets:
      PAT:
        required: false
      
jobs:
  Adding_documentation_files_and_publish_page:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image_to_use }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
         
    steps:
      - name: Show Computing Environment
        id: Show_Computing_Environment
        run: |
          # Activate bash and conda environment
          bash
          . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          conda activate spac
          echo "Checking in ${{ inputs.image_to_use }}"
          conda list
          
      - run: echo "Checking in ${{ inputs.image_to_use }}"
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setting Environment
        run: |
          # Install required pacakges
          bash
          . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          conda activate spac

          # pip --version

          # pip install sphinx
          
          # pip install sphinx_rtd_theme

          # conda install -c conda-forge python-semantic-release

          conda install make

          conda install sphinx sphinx_rtd_theme

      - name: Generating Documentations
        id: prepare-push 
        if: ${{ success() }}
        run: |
          bash
          . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          conda activate spac

          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          cd $current_wd
          
          # Configure git
          export MY_GIT_TOKEN=${{ secrets.PAT }}
          export MY_GIT_USERNAME=${{ github.actor }}
          export MY_GIT_EMAIL=${{ github.event.pusher.email }}
          
          git config --global user.name "$MY_GIT_USERNAME"
          git config --global user.email "$MY_GIT_EMAIL"
          git config --global url."https://api:$MY_GIT_TOKEN@github.com/".insteadOf "https://github.com/"
          git config --global url."https://ssh:$MY_GIT_TOKEN@github.com/".insteadOf "ssh://git@github.com/"
          git config --global url."https://git:$MY_GIT_TOKEN@github.com/".insteadOf "git@github.com:"
          
          git config --global --add safe.directory "$current_wd"

          git clone https://github.com/fnlcr-dmap/gitflow-py.git

          cd $current_wd
          
          git clone https://github.com/${GITHUB_REPOSITORY}.git
          
          cd ${GITHUB_REPOSITORY#*/}

          echo "############################################"
          echo "######### Updating Documentations ##########"
          echo "############################################"

          pip install python-semantic-release

          echo "Start updating versions"
          automatic_versioning="$(semantic-release version --no-push --no-commit)"
          echo "New Version: $automatic_versioning"
          sed -i "s/version='[0-9.]*'/version='$automatic_versioning'/" setup.py

          git add setup.py
          git add CHANGELOG.md

          echo $(git commit -a -m "docs(version): Automatic Version Bumping") > commit_log.log
          cat commit_log.log
          export nothing_for_commit="$(grep -Po "nothing to commit" commit_log.log)"

          git config http.postBuffer 524288000

          # if [ -n "${nothing_for_commit}" ]; then
          #   echo "Commit check failed with message: $nothing_for_commit" 
          # else
          echo "Updating main now."
          git push -f origin main
          # fi

          # Calling documentation de script
          bash ../gitflow-py/src/document_generation.sh

          rm commit_log.log
          
          git add --all

          git commit -a -m "Adding auto-generated files"  
          
          # Processing github_page branch      
          
          echo "Processing github_page branch"
          
          if git rev-parse --verify github_page >/dev/null 2>&1; then
            echo "github_page already exists!"
          else
            git checkout -b github_page
            echo "github_page created!"
          fi
          
          git checkout github_page

          git checkout main -- docs

          # this file is for GitHub paga to correctly render theme
          touch docs/.nojekyll
          
          git add docs/.nojekyll   

          echo "For GitHub Page Deployment" > docs/.nojekyll

          echo $(git commit -a -m "Updating GitHub Page") > commit_log.log
          
          cat commit_log.log
          
          export nothing_for_commit="$(grep -Po "nothing to commit" commit_log.log)"

          rm commit_log.log

          git config http.postBuffer 524288000
          
          if [ -n "${nothing_for_commit}" ]; then
            echo "Commit check failed with message: $nothing_for_commit" 
          else
            echo "Pushing changes now."
            git push -f origin github_page
          fi
          
          echo "Process completed."
    